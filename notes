/*
Access modifier help:
Levels go as follows: private < default (no modifier) < protected < public
            Within same class       Within same package     Within child classes        All classes
private     x                       -                       -                           -
empty       x                       x                       -                           -
protected   x                       x                       x                           -
public      x                       x                       x                           x
*/

// This is a collection of things to sort

/*

*/

// Java notes
/*
@Override is an optional annotation, although it does help prevent errors in your code. It overrides a method of the same signature in
    a superclass. In most cases, it's a politeness towards your compiler.
Double literals
    double price = 25.75;
    double price = 25d;
    double coeff = 23_456.75_01;    // Underscores in numeric literals only help readability and serve no other purpose
    double val = 5.015E15;  // 5.015 * 10^15
Literal annotations
    0 prefix = octal; int i = 0156 => 110 decimal
    0x prefix = hex; int i = 0x15 => 21 decimal (0001 0101 binary = 1 5 hex)
    0b prefix = binary; int i = 0b110 => 6 decimal
    d suffix = double; double i = 110d => 110.0 decimal
    f suffix = float; float f = 20f;
    l suffix = long; long l = 200l;


*/

// Database notes
/*

file system storage vs (relational) database management systems - file system storage is usually unrelated data stored directly in files while dbms is usually ordered in relational structures
    (also in files if you want to be specific and look into the backend operations)

*/